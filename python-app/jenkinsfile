pipeline {
    agent any

    tools {
        maven 'Maven 3.9.5'
        jdk 'jdk8'
	}
	environment 

     stages {
        stage('Build') {
            steps {
                sh 'cd python-app && mvn clean install'
            }
        }
        stage('Test') {
            steps {
                sh 'cd python-app && mvn test'
            }
        }
        stage('Build Docker image') {
			steps {
				script {
                    cd python-app
                    // Jenkins will do docker build -t hggosa.jfrog.io/docker-local/demo-java-app:1.0.0 -f java-app/dockerfile
					docker.build("$DOCKER_IMAGE_NAME", '.')
				}
			}
		}
        stage('Scan and push image') {
			steps {
				dir('python-app/') {
					// Scan Docker image for vulnerabilities
					jf 'docker scan $DOCKER_IMAGE_NAME'

					// Push image to Artifactory
					jf 'docker push $DOCKER_IMAGE_NAME'
				}
			}
		}
        stage('Publish build info') {
			steps {
				jf 'rt build-publish'
			}
		}

    }
} 
